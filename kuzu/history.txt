     size(Message.content) AS messageLength,
     CASE
      WHEN size(Message.content) <  40 THEN 0
      WHEN size(Message.content) <  80 THEN 1
      WHEN size(Message.content) <      3
     END
     AS lengthCategory,
     count(*) AS messageCount,
     totalMessageCount
WHERE date < $datetime
RETURN date_part('year', date) AS year,
     isComment,
     lengthCategory,
     messageCount,
     avg(messageLength) AS averageMessagelength,
     sum(messageLength) AS sumMessageLength,
     to_float(messageCount) / totalMessageCount AS percentageOfMessages
;
MATCH(Message:Post:Comment) RETURN * LIMIT 10 ORDER BY Message.creationDate ASC;
MATCH(Message:Post:Comment) RETURN * ORDER BY Message.creationDate ASC LIMIT 10;
MATCH (Message:Post:Comment) WITH Message MATCH (Person:Person) WITH Person MATCH (Person)-[:LIKES]->(Comment) RETURN *;
MATCH (Message:Post:Comment) WITH Message MATCH (Person:Person) WITH Person MATCH (Person)-[:LIKES]->(Comment) RETURN * LIMIT 10;
MATCH (Message:Post:Comment) 
WHERE Message.creationDate < $datetime 
WITH count(Message) AS totalMessageCount 
MATCH (Message:Post:Comment)
WITH Message.creationDate AS date,
     LABEL(Message) = "Comment" AS isComment,
     size(Message.content) AS messageLength,
     CASE
      WHEN size(Message.content) <  40 THEN 0
      WHEN size(Message.content) <  80 THEN 1
      WHEN size(Message.content) < 160 THEN 2
      ELSE                                  3
     END
     AS lengthCategory,
     count(*) AS messageCount,
     totalMessageCount
WHERE date < $datetime
RETURN date_part('year', date) AS year,
     isComment,
     lengthCategory,
     messageCount,
     avg(messageLength) AS averageMessagelength,
     sum(messageLength) AS sumMessageLength,
     to_float(messageCount) / totalMessageCount AS percentageOfMessages
;
MATCH (Message:Post:Comment) WHERE Message.creationDate < 2010-06-11 09:21:46+00:00 WITH count(Message) AS totalMessageCount MATCH (Message:Post:Comment) WITH Message.creationDate AS date, LABEL(Message) = "Comment" AS isComment, size(Message.content) AS messageLength, CASE WHEN size(Message.content) < 40 THEN 0 WHEN size(Message.content) < 80 THEN 1 WHEN size(Message.content) < 160 THEN 2 ELSE 3 END AS lengthCategory, count(*) AS messageCount, totalMessageCount WHERE date < 2010-06-11 09:21:46+00:00 RETURN date_part('year', date) AS year, isComment, lengthCategory, messageCount, avg(messageLength) AS averageMessagelength, sum(messageLength) AS sumMessageLength, to_float(messageCount) / totalMessageCount AS percentageOfMessages
;
MATCH (Message:Post:Comment) WHERE Message.creationDate < 2010-06-11 09:21:46+00:00 WITH count(Message) AS totalMessageCount MATCH (Message:Post:Comment) WITH Message.creationDate AS date, LABEL(Message) = "Comment" AS isComment, size(Message.content) AS messageLength, CASE WHEN size(Message.content) < 40 THEN 0 WHEN size(Message.content) < 80 THEN 1 WHEN size(Message.content) < 160 THEN 2 ELSE 3 END AS lengthCategory, count(*) AS messageCount, totalMessageCount WHERE date < 2010-06-11 09:21:46+00:00 RETURN date_part('year', date) AS year, isComment, lengthCategory, messageCount, avg(messageLength) AS averageMessagelength, sum(messageLength) AS sumMessageLength, to_float(messageCount) / totalMessageCount AS percentageOfMessages;
MATCH (Message:Post:Comment) 
WHERE Message.creationDate < $datetime 
WITH count(Message) AS totalMessageCount 
MATCH (Message:Post:Comment)
WITH Message.creationDate AS date,
     LABEL(Message) = "Comment" AS isComment,
     size(Message.content) AS messageLength,
     CASE
      WHEN size(Message.content) <  40 THEN 0
      WHEN size(Message.content) <  80 THEN 1
      WHEN size(Message.content) < 160 THEN 2
      ELSE                                  3
     END
     AS lengthCategory,
     count(*) AS messageCount,
     totalMessageCount
WHERE date < $datetime
RETURN date_part('year', date) AS year,
     isComment,
     lengthCategory,
     messageCount,
     avg(messageLength) AS averageMessagelength,
     sum(messageLength) AS sumMessageLength,
     to_float(messageCount) / totalMessageCount AS percentageOfMessages
;
MATCH (Message:Post:Comment) 
WHERE Message.creationDate < $datetime 
WITH count(Message) AS totalMessageCount 
MATCH (Message:Post:Comment) 
WITH Message.creationDate AS date, 
     LABEL(Message) = "Comment" AS isComment,
     size(Message.content) AS messageLength,
     CASE
      WHEN size(Message.content) <  40 THEN 0
      WHEN size(Message.content) <  80 THEN 1
      WHEN size(Message.content) < 160 THEN 2
      ELSE                                  3
     END
     AS lengthCategory,
     count(*) AS messageCount,
     totalMessageCount
WHERE date < $datetime
RETURN date_part('year', date) AS year,
     isComment,
     lengthCategory,
     messageCount,
     avg(messageLength) AS averageMessagelength,
     sum(messageLength) AS sumMessageLength,
     to_float(messageCount) / totalMessageCount AS percentageOfMessages
;
